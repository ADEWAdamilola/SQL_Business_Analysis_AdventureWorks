---1. Categorize products into 'High', 'Medium', and 'Low' price categories based on their list price,
----and count the number of products in each category.


SELECT 
    CASE 
        WHEN ListPrice > 1000 THEN 'High'
        WHEN ListPrice BETWEEN 500 AND 1000 THEN 'Medium'
        ELSE 'Low'
    END AS PriceCategory,
    COUNT(*) AS ProductCount
FROM Production.Product
GROUP BY 
    CASE 
        WHEN ListPrice > 1000 THEN 'High'
        WHEN ListPrice BETWEEN 500 AND 1000 THEN 'Medium'
        ELSE 'Low'
    END;

-------2. List all product names that start with the letter 'A' and trim any leading or trailing spaces.
	SELECT 
    LTRIM(RTRIM(Name)) AS ProductName
FROM 
    Production.Product
WHERE 
    Name LIKE 'A%';

-----3. Find the total sales for products that are either 'Red' or 'Black' and have a ListPrice greater than 1000.
SELECT 
    SUM(SOD.LineTotal) AS TotalSales
FROM 
    Sales.SalesOrderDetail SOD
JOIN 
    Production.Product P ON SOD.ProductID = P.ProductID
WHERE 
    P.Color IN ('Red', 'Black')
    AND P.ListPrice > 1000;


---	4. What is the total sales amount for each sales territory?

SELECT 
    ST.Name AS TerritoryName,
    SUM(SOD.LineTotal) AS TotalSales
FROM 
    Sales.SalesOrderDetail SOD
JOIN 
    Sales.SalesOrderHeader SOH ON SOD.SalesOrderID = SOH.SalesOrderID
JOIN 
    Sales.SalesTerritory ST ON SOH.TerritoryID = ST.TerritoryID
GROUP BY 
    ST.Name
ORDER BY 
    TotalSales DESC;

----5. Who are the top 10 customers by total purchase amount?

SELECT TOP 10
    C.CustomerID,
    P.FirstName + ' ' + P.LastName AS CustomerName,
    SUM(SOD.LineTotal) AS TotalPurchase
FROM 
    Sales.Customer C
JOIN 
    Person.Person P ON C.PersonID = P.BusinessEntityID
JOIN 
    Sales.SalesOrderHeader SOH ON C.CustomerID = SOH.CustomerID
JOIN 
    Sales.SalesOrderDetail SOD ON SOH.SalesOrderID = SOD.SalesOrderID
GROUP BY 
    C.CustomerID, P.FirstName, P.LastName
ORDER BY 
    TotalPurchase DESC

-----6. List the employees who have processed the most orders.

SELECT 
    E.BusinessEntityID,
    P.FirstName + ' ' + P.LastName AS EmployeeName,
    COUNT(SOH.SalesOrderID) AS OrderCount
FROM 
    Sales.SalesOrderHeader SOH
JOIN 
    Sales.SalesPerson SP ON SOH.SalesPersonID = SP.BusinessEntityID
JOIN 
    HumanResources.Employee E ON SP.BusinessEntityID = E.BusinessEntityID
JOIN 
    Person.Person P ON E.BusinessEntityID = P.BusinessEntityID
GROUP BY 
    E.BusinessEntityID, P.FirstName, P.LastName
ORDER BY 
    OrderCount DESC;

---7. What is the total revenue generated by each product subcategory?

SELECT 
    PSC.Name AS SubcategoryName,
    SUM(SOD.LineTotal) AS TotalRevenue
FROM 
    Sales.SalesOrderDetail SOD
JOIN 
    Production.Product P ON SOD.ProductID = P.ProductID
JOIN 
    Production.ProductSubcategory PSC ON P.ProductSubcategoryID = PSC.ProductSubcategoryID
GROUP BY 
    PSC.Name
ORDER BY 
    TotalRevenue DESC;

----8.Identify the top 10 employees with the most years of service.

SELECT TOP 10
    E.BusinessEntityID,
    P.FirstName + ' ' + P.LastName AS EmployeeName,
    DATEDIFF(YEAR, E.HireDate, GETDATE()) AS YearsOfService
FROM 
    HumanResources.Employee E
JOIN 
    Person.Person P ON E.BusinessEntityID = P.BusinessEntityID
ORDER BY 
    YearsOfService DESC


-----9.Who are the top 10 highest paid employees?

SELECT TOP 10
    E.BusinessEntityID,
    P.FirstName + ' ' + P.LastName AS EmployeeName,
    EPH.Rate AS Salary
FROM 
    HumanResources.Employee E
JOIN 
    Person.Person P ON E.BusinessEntityID = P.BusinessEntityID
JOIN 
    HumanResources.EmployeePayHistory EPH ON E.BusinessEntityID = EPH.BusinessEntityID
ORDER BY 
    EPH.Rate DESC

-----10. Calculate the total salary expenses for each department.
SELECT 
    D.Name AS DepartmentName,
    SUM(EPH.Rate) AS TotalSalaryExpenses
FROM 
    HumanResources.EmployeePayHistory EPH
JOIN 
    HumanResources.EmployeeDepartmentHistory EDH ON EPH.BusinessEntityID = EDH.BusinessEntityID
JOIN 
    HumanResources.Department D ON EDH.DepartmentID = D.DepartmentID
WHERE 
    EDH.EndDate IS NULL
GROUP BY 
    D.Name
ORDER BY 
    TotalSalaryExpenses DESC;

------11. Identify the top 15 longest-serving employees.

	WITH EmployeeService AS (
    SELECT TOP 15
        E.BusinessEntityID,
        P.FirstName + ' ' + P.LastName AS EmployeeName,
        DATEDIFF(YEAR, E.HireDate, GETDATE()) AS YearsOfService
    FROM 
        HumanResources.Employee E
    JOIN 
        Person.Person P ON E.BusinessEntityID = P.BusinessEntityID
)
SELECT 
    BusinessEntityID,
    EmployeeName,
    YearsOfService
FROM 
    EmployeeService
ORDER BY 
    YearsOfService DESC


----12. Count the number of documents associated with each product.
SELECT 
    ProductID,
    COUNT(DocumentNode) AS DocumentCount
FROM 
    Production.ProductDocument
GROUP BY 
    ProductID
ORDER BY 
    DocumentCount DESC;

-----13. Find the number of work order routings per location.
	SELECT 
    LocationID,
    COUNT(*) AS WorkOrderRoutingCount
FROM 
    Production.WorkOrderRouting
GROUP BY 
    LocationID
ORDER BY 
    WorkOrderRoutingCount DESC;

----14. Find the sales territory with the highest sales year-to-date.
SELECT TOP 1
    TerritoryID,
    Name AS TerritoryName,
    SalesYTD
FROM 
    Sales.SalesTerritory
ORDER BY 
    SalesYTD DESC


SELECT 
    E.BusinessEntityID,
    P.FirstName,
    P.LastName,
    P.BirthDate,
    E.MaritalStatus
FROM 
    HumanResources.Employee E
JOIN 
    Person.Person P ON E.BusinessEntityID = P.BusinessEntityID
WHERE 
    E.MaritalStatus = 'M' -- 'M' indicates married
    AND DATEDIFF(YEAR, P.BirthDate, GETDATE()) BETWEEN 20 AND 40
ORDER BY 
    P.LastName, P.FirstName;


-----15. List the product cost history for a specific product.
SELECT 
    ProductID,
    StartDate,
    EndDate,
    StandardCost
FROM 
    Production.ProductCostHistory
WHERE 
    ProductID = 709; 

--- 16. What is the average price of products for each category?

SELECT 
    PC.Name AS CategoryName,
    AVG(P.ListPrice) AS AveragePrice
FROM 
    Production.Product P
JOIN 
    Production.ProductSubcategory PSC ON P.ProductSubcategoryID = PSC.ProductSubcategoryID
JOIN 
    Production.ProductCategory PC ON PSC.ProductCategoryID = PC.ProductCategoryID
GROUP BY 
    PC.Name
ORDER BY 
    AveragePrice DESC;

